rule cc
#  command =  ../../third_party/llvm-build/Release+Asserts/bin/clang -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_c} -c ${in} -o ${out}
  command =  clang-6.0 -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_c} -c ${in} -o ${out}
  description = CC ${out}
  depfile = ${out}.d
  deps = gcc
rule cxx
#  command =  ../../third_party/llvm-build/Release+Asserts/bin/clang++ -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_cc} -c ${in} -o ${out}
  command =  clang++-6.0 -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_cc} -c ${in} -o ${out}
  description = CXX ${out}
  depfile = ${out}.d
  deps = gcc
rule alink
#  command = rm -f ${out} && "../../third_party/llvm-build/Release+Asserts/bin/llvm-ar" ${arflags} -r -c -s -D ${out} @"${out}.rsp"
  command = rm -f ${out} && "llvm-ar-6.0" ${arflags}rcs ${out} @"${out}.rsp"
  description = AR ${out} 
  rspfile = ${out}.rsp
  rspfile_content = ${in}
rule stamp
  command = touch ${out}
  description = STAMP ${out}
rule copy
  command = ln -f ${in} ${out} 2>/dev/null || (rm -rf ${out} && cp -af ${in} ${out})
  description = COPY ${in} ${out}

subninja obj/base/base.ninja
subninja obj/base/base_static.ninja
subninja obj/base/base_static/base_numerics.ninja
subninja obj/base/third_party/dynamic_annotations/dynamic_annotations.ninja
subninja obj/base/third_party/symbolize/symbolize.ninja
subninja obj/base/third_party/xdg_mime/xdg_mime.ninja
subninja obj/base/third_party/xdg_user_dirs/xdg_user_dirs.ninja
subninja obj/base/third_party/libevent/libevent.ninja
subninja obj/third_party/modp_b64/modp_b64.ninja

build obj/base/anchor_functions_buildflags.stamp: stamp gen/base/android/library_loader/anchor_functions_buildflags.h
build obj/base/build_date.stamp: stamp gen/base/generated_build_date.h
build obj/base/cfi_buildflags.stamp: stamp gen/base/cfi_buildflags.h
build obj/base/debugging_buildflags.stamp: stamp gen/base/debug/debugging_buildflags.h
build obj/base/orderfile_buildflags.stamp: stamp gen/base/android/orderfile/orderfile_buildflags.h
build obj/base/partition_alloc_buildflags.stamp: stamp gen/base/partition_alloc_buildflags.h
build obj/base/protected_memory_buildflags.stamp: stamp gen/base/memory/protected_memory_buildflags.h
build obj/base/synchronization_buildflags.stamp: stamp gen/base/synchronization/synchronization_buildflags.h
build obj/base/allocator/allocator.stamp: stamp
build obj/base/allocator/buildflags.stamp: stamp gen/base/allocator/buildflags.h
